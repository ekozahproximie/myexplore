package com.trimble.agmantra.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import com.trimble.agmantra.entity.Organization;
import com.trimble.agmantra.entity.User;
import com.trimble.agmantra.entity.Client;
import com.trimble.agmantra.entity.Farm;
import com.trimble.agmantra.entity.FeatureType;
import com.trimble.agmantra.entity.Units;
import com.trimble.agmantra.entity.Field;
import com.trimble.agmantra.entity.Feature;
import com.trimble.agmantra.entity.Commodity;
import com.trimble.agmantra.entity.Crop;
import com.trimble.agmantra.entity.TemplateType;
import com.trimble.agmantra.entity.AttributeInfoEntity;
import com.trimble.agmantra.entity.PickList;
import com.trimble.agmantra.entity.AttributeEntity;
import com.trimble.agmantra.entity.Job;
import com.trimble.agmantra.entity.Jobtiming;
import com.trimble.agmantra.entity.JobTransaction;
import com.trimble.agmantra.entity.JobType;
import com.trimble.agmantra.entity.AgJob;
import com.trimble.agmantra.entity.Equipments;
import com.trimble.agmantra.entity.Supply;
import com.trimble.agmantra.entity.TankMix;
import com.trimble.agmantra.entity.People;
import com.trimble.agmantra.entity.Whether;
import com.trimble.agmantra.entity.FieldCondition;
import com.trimble.agmantra.entity.FlagCounter;
import com.trimble.agmantra.entity.Mapping;
import com.trimble.agmantra.entity.Language;

import com.trimble.agmantra.dao.OrganizationDao;
import com.trimble.agmantra.dao.UserDao;
import com.trimble.agmantra.dao.ClientDao;
import com.trimble.agmantra.dao.FarmDao;
import com.trimble.agmantra.dao.FeatureTypeDao;
import com.trimble.agmantra.dao.UnitsDao;
import com.trimble.agmantra.dao.FieldDao;
import com.trimble.agmantra.dao.FeatureDao;
import com.trimble.agmantra.dao.CommodityDao;
import com.trimble.agmantra.dao.CropDao;
import com.trimble.agmantra.dao.TemplateTypeDao;
import com.trimble.agmantra.dao.AttributeInfoEntityDao;
import com.trimble.agmantra.dao.PickListDao;
import com.trimble.agmantra.dao.AttributeEntityDao;
import com.trimble.agmantra.dao.JobDao;
import com.trimble.agmantra.dao.JobtimingDao;
import com.trimble.agmantra.dao.JobTransactionDao;
import com.trimble.agmantra.dao.JobTypeDao;
import com.trimble.agmantra.dao.AgJobDao;
import com.trimble.agmantra.dao.EquipmentsDao;
import com.trimble.agmantra.dao.SupplyDao;
import com.trimble.agmantra.dao.TankMixDao;
import com.trimble.agmantra.dao.PeopleDao;
import com.trimble.agmantra.dao.WhetherDao;
import com.trimble.agmantra.dao.FieldConditionDao;
import com.trimble.agmantra.dao.FlagCounterDao;
import com.trimble.agmantra.dao.MappingDao;
import com.trimble.agmantra.dao.LanguageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig organizationDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig clientDaoConfig;
    private final DaoConfig farmDaoConfig;
    private final DaoConfig featureTypeDaoConfig;
    private final DaoConfig unitsDaoConfig;
    private final DaoConfig fieldDaoConfig;
    private final DaoConfig featureDaoConfig;
    private final DaoConfig commodityDaoConfig;
    private final DaoConfig cropDaoConfig;
    private final DaoConfig templateTypeDaoConfig;
    private final DaoConfig attributeInfoEntityDaoConfig;
    private final DaoConfig pickListDaoConfig;
    private final DaoConfig attributeEntityDaoConfig;
    private final DaoConfig jobDaoConfig;
    private final DaoConfig jobtimingDaoConfig;
    private final DaoConfig jobTransactionDaoConfig;
    private final DaoConfig jobTypeDaoConfig;
    private final DaoConfig agJobDaoConfig;
    private final DaoConfig equipmentsDaoConfig;
    private final DaoConfig supplyDaoConfig;
    private final DaoConfig tankMixDaoConfig;
    private final DaoConfig peopleDaoConfig;
    private final DaoConfig whetherDaoConfig;
    private final DaoConfig fieldConditionDaoConfig;
    private final DaoConfig flagCounterDaoConfig;
    private final DaoConfig mappingDaoConfig;
    private final DaoConfig languageDaoConfig;

    private final OrganizationDao organizationDao;
    private final UserDao userDao;
    private final ClientDao clientDao;
    private final FarmDao farmDao;
    private final FeatureTypeDao featureTypeDao;
    private final UnitsDao unitsDao;
    private final FieldDao fieldDao;
    private final FeatureDao featureDao;
    private final CommodityDao commodityDao;
    private final CropDao cropDao;
    private final TemplateTypeDao templateTypeDao;
    private final AttributeInfoEntityDao attributeInfoEntityDao;
    private final PickListDao pickListDao;
    private final AttributeEntityDao attributeEntityDao;
    private final JobDao jobDao;
    private final JobtimingDao jobtimingDao;
    private final JobTransactionDao jobTransactionDao;
    private final JobTypeDao jobTypeDao;
    private final AgJobDao agJobDao;
    private final EquipmentsDao equipmentsDao;
    private final SupplyDao supplyDao;
    private final TankMixDao tankMixDao;
    private final PeopleDao peopleDao;
    private final WhetherDao whetherDao;
    private final FieldConditionDao fieldConditionDao;
    private final FlagCounterDao flagCounterDao;
    private final MappingDao mappingDao;
    private final LanguageDao languageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        organizationDaoConfig = daoConfigMap.get(OrganizationDao.class).clone();
        organizationDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        clientDaoConfig = daoConfigMap.get(ClientDao.class).clone();
        clientDaoConfig.initIdentityScope(type);

        farmDaoConfig = daoConfigMap.get(FarmDao.class).clone();
        farmDaoConfig.initIdentityScope(type);

        featureTypeDaoConfig = daoConfigMap.get(FeatureTypeDao.class).clone();
        featureTypeDaoConfig.initIdentityScope(type);

        unitsDaoConfig = daoConfigMap.get(UnitsDao.class).clone();
        unitsDaoConfig.initIdentityScope(type);

        fieldDaoConfig = daoConfigMap.get(FieldDao.class).clone();
        fieldDaoConfig.initIdentityScope(type);

        featureDaoConfig = daoConfigMap.get(FeatureDao.class).clone();
        featureDaoConfig.initIdentityScope(type);

        commodityDaoConfig = daoConfigMap.get(CommodityDao.class).clone();
        commodityDaoConfig.initIdentityScope(type);

        cropDaoConfig = daoConfigMap.get(CropDao.class).clone();
        cropDaoConfig.initIdentityScope(type);

        templateTypeDaoConfig = daoConfigMap.get(TemplateTypeDao.class).clone();
        templateTypeDaoConfig.initIdentityScope(type);

        attributeInfoEntityDaoConfig = daoConfigMap.get(AttributeInfoEntityDao.class).clone();
        attributeInfoEntityDaoConfig.initIdentityScope(type);

        pickListDaoConfig = daoConfigMap.get(PickListDao.class).clone();
        pickListDaoConfig.initIdentityScope(type);

        attributeEntityDaoConfig = daoConfigMap.get(AttributeEntityDao.class).clone();
        attributeEntityDaoConfig.initIdentityScope(type);

        jobDaoConfig = daoConfigMap.get(JobDao.class).clone();
        jobDaoConfig.initIdentityScope(type);

        jobtimingDaoConfig = daoConfigMap.get(JobtimingDao.class).clone();
        jobtimingDaoConfig.initIdentityScope(type);

        jobTransactionDaoConfig = daoConfigMap.get(JobTransactionDao.class).clone();
        jobTransactionDaoConfig.initIdentityScope(type);

        jobTypeDaoConfig = daoConfigMap.get(JobTypeDao.class).clone();
        jobTypeDaoConfig.initIdentityScope(type);

        agJobDaoConfig = daoConfigMap.get(AgJobDao.class).clone();
        agJobDaoConfig.initIdentityScope(type);

        equipmentsDaoConfig = daoConfigMap.get(EquipmentsDao.class).clone();
        equipmentsDaoConfig.initIdentityScope(type);

        supplyDaoConfig = daoConfigMap.get(SupplyDao.class).clone();
        supplyDaoConfig.initIdentityScope(type);

        tankMixDaoConfig = daoConfigMap.get(TankMixDao.class).clone();
        tankMixDaoConfig.initIdentityScope(type);

        peopleDaoConfig = daoConfigMap.get(PeopleDao.class).clone();
        peopleDaoConfig.initIdentityScope(type);

        whetherDaoConfig = daoConfigMap.get(WhetherDao.class).clone();
        whetherDaoConfig.initIdentityScope(type);

        fieldConditionDaoConfig = daoConfigMap.get(FieldConditionDao.class).clone();
        fieldConditionDaoConfig.initIdentityScope(type);

        flagCounterDaoConfig = daoConfigMap.get(FlagCounterDao.class).clone();
        flagCounterDaoConfig.initIdentityScope(type);

        mappingDaoConfig = daoConfigMap.get(MappingDao.class).clone();
        mappingDaoConfig.initIdentityScope(type);

        languageDaoConfig = daoConfigMap.get(LanguageDao.class).clone();
        languageDaoConfig.initIdentityScope(type);

        organizationDao = new OrganizationDao(organizationDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        clientDao = new ClientDao(clientDaoConfig, this);
        farmDao = new FarmDao(farmDaoConfig, this);
        featureTypeDao = new FeatureTypeDao(featureTypeDaoConfig, this);
        unitsDao = new UnitsDao(unitsDaoConfig, this);
        fieldDao = new FieldDao(fieldDaoConfig, this);
        featureDao = new FeatureDao(featureDaoConfig, this);
        commodityDao = new CommodityDao(commodityDaoConfig, this);
        cropDao = new CropDao(cropDaoConfig, this);
        templateTypeDao = new TemplateTypeDao(templateTypeDaoConfig, this);
        attributeInfoEntityDao = new AttributeInfoEntityDao(attributeInfoEntityDaoConfig, this);
        pickListDao = new PickListDao(pickListDaoConfig, this);
        attributeEntityDao = new AttributeEntityDao(attributeEntityDaoConfig, this);
        jobDao = new JobDao(jobDaoConfig, this);
        jobtimingDao = new JobtimingDao(jobtimingDaoConfig, this);
        jobTransactionDao = new JobTransactionDao(jobTransactionDaoConfig, this);
        jobTypeDao = new JobTypeDao(jobTypeDaoConfig, this);
        agJobDao = new AgJobDao(agJobDaoConfig, this);
        equipmentsDao = new EquipmentsDao(equipmentsDaoConfig, this);
        supplyDao = new SupplyDao(supplyDaoConfig, this);
        tankMixDao = new TankMixDao(tankMixDaoConfig, this);
        peopleDao = new PeopleDao(peopleDaoConfig, this);
        whetherDao = new WhetherDao(whetherDaoConfig, this);
        fieldConditionDao = new FieldConditionDao(fieldConditionDaoConfig, this);
        flagCounterDao = new FlagCounterDao(flagCounterDaoConfig, this);
        mappingDao = new MappingDao(mappingDaoConfig, this);
        languageDao = new LanguageDao(languageDaoConfig, this);

        registerDao(Organization.class, organizationDao);
        registerDao(User.class, userDao);
        registerDao(Client.class, clientDao);
        registerDao(Farm.class, farmDao);
        registerDao(FeatureType.class, featureTypeDao);
        registerDao(Units.class, unitsDao);
        registerDao(Field.class, fieldDao);
        registerDao(Feature.class, featureDao);
        registerDao(Commodity.class, commodityDao);
        registerDao(Crop.class, cropDao);
        registerDao(TemplateType.class, templateTypeDao);
        registerDao(AttributeInfoEntity.class, attributeInfoEntityDao);
        registerDao(PickList.class, pickListDao);
        registerDao(AttributeEntity.class, attributeEntityDao);
        registerDao(Job.class, jobDao);
        registerDao(Jobtiming.class, jobtimingDao);
        registerDao(JobTransaction.class, jobTransactionDao);
        registerDao(JobType.class, jobTypeDao);
        registerDao(AgJob.class, agJobDao);
        registerDao(Equipments.class, equipmentsDao);
        registerDao(Supply.class, supplyDao);
        registerDao(TankMix.class, tankMixDao);
        registerDao(People.class, peopleDao);
        registerDao(Whether.class, whetherDao);
        registerDao(FieldCondition.class, fieldConditionDao);
        registerDao(FlagCounter.class, flagCounterDao);
        registerDao(Mapping.class, mappingDao);
        registerDao(Language.class, languageDao);
    }
    
    public void clear() {
        organizationDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        clientDaoConfig.getIdentityScope().clear();
        farmDaoConfig.getIdentityScope().clear();
        featureTypeDaoConfig.getIdentityScope().clear();
        unitsDaoConfig.getIdentityScope().clear();
        fieldDaoConfig.getIdentityScope().clear();
        featureDaoConfig.getIdentityScope().clear();
        commodityDaoConfig.getIdentityScope().clear();
        cropDaoConfig.getIdentityScope().clear();
        templateTypeDaoConfig.getIdentityScope().clear();
        attributeInfoEntityDaoConfig.getIdentityScope().clear();
        pickListDaoConfig.getIdentityScope().clear();
        attributeEntityDaoConfig.getIdentityScope().clear();
        jobDaoConfig.getIdentityScope().clear();
        jobtimingDaoConfig.getIdentityScope().clear();
        jobTransactionDaoConfig.getIdentityScope().clear();
        jobTypeDaoConfig.getIdentityScope().clear();
        agJobDaoConfig.getIdentityScope().clear();
        equipmentsDaoConfig.getIdentityScope().clear();
        supplyDaoConfig.getIdentityScope().clear();
        tankMixDaoConfig.getIdentityScope().clear();
        peopleDaoConfig.getIdentityScope().clear();
        whetherDaoConfig.getIdentityScope().clear();
        fieldConditionDaoConfig.getIdentityScope().clear();
        flagCounterDaoConfig.getIdentityScope().clear();
        mappingDaoConfig.getIdentityScope().clear();
        languageDaoConfig.getIdentityScope().clear();
    }

    public OrganizationDao getOrganizationDao() {
        return organizationDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ClientDao getClientDao() {
        return clientDao;
    }

    public FarmDao getFarmDao() {
        return farmDao;
    }

    public FeatureTypeDao getFeatureTypeDao() {
        return featureTypeDao;
    }

    public UnitsDao getUnitsDao() {
        return unitsDao;
    }

    public FieldDao getFieldDao() {
        return fieldDao;
    }

    public FeatureDao getFeatureDao() {
        return featureDao;
    }

    public CommodityDao getCommodityDao() {
        return commodityDao;
    }

    public CropDao getCropDao() {
        return cropDao;
    }

    public TemplateTypeDao getTemplateTypeDao() {
        return templateTypeDao;
    }

    public AttributeInfoEntityDao getAttributeInfoEntityDao() {
        return attributeInfoEntityDao;
    }

    public PickListDao getPickListDao() {
        return pickListDao;
    }

    public AttributeEntityDao getAttributeEntityDao() {
        return attributeEntityDao;
    }

    public JobDao getJobDao() {
        return jobDao;
    }

    public JobtimingDao getJobtimingDao() {
        return jobtimingDao;
    }

    public JobTransactionDao getJobTransactionDao() {
        return jobTransactionDao;
    }

    public JobTypeDao getJobTypeDao() {
        return jobTypeDao;
    }

    public AgJobDao getAgJobDao() {
        return agJobDao;
    }

    public EquipmentsDao getEquipmentsDao() {
        return equipmentsDao;
    }

    public SupplyDao getSupplyDao() {
        return supplyDao;
    }

    public TankMixDao getTankMixDao() {
        return tankMixDao;
    }

    public PeopleDao getPeopleDao() {
        return peopleDao;
    }

    public WhetherDao getWhetherDao() {
        return whetherDao;
    }

    public FieldConditionDao getFieldConditionDao() {
        return fieldConditionDao;
    }

    public FlagCounterDao getFlagCounterDao() {
        return flagCounterDao;
    }

    public MappingDao getMappingDao() {
        return mappingDao;
    }

    public LanguageDao getLanguageDao() {
        return languageDao;
    }

}
