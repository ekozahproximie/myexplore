package com.trimble.vilicus.dao;

import android.database.sqlite.SQLiteDatabase;

import com.trimble.vilicus.entity.Asset;
import com.trimble.vilicus.entity.Organization;
import com.trimble.vilicus.entity.User;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.IdentityScopeType;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig organizationDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig assetDaoConfig;
    
    private final OrganizationDao organizationDao;
    private final UserDao userDao;
    private final AssetDao assetDao;
   
    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        organizationDaoConfig = daoConfigMap.get(OrganizationDao.class).clone();
        organizationDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);
        
        assetDaoConfig = daoConfigMap.get(AssetDao.class).clone();
        assetDaoConfig.initIdentityScope(type);


        

        organizationDao = new OrganizationDao(organizationDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        assetDao = new AssetDao(assetDaoConfig, this);
        
        
       
        registerDao(Organization.class, organizationDao);
        registerDao(User.class, userDao);
        registerDao(Asset.class, assetDao);
    }
    
    public void clear() {
        organizationDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        
        assetDaoConfig.getIdentityScope().clear();
        
    }

    public OrganizationDao getOrganizationDao() {
        return organizationDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }



    public AssetDao getAssetDao() {
        return assetDao;
    }

   

}
